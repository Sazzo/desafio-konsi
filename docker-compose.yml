version: '3.8'

services:
  web-client:
    image: ghcr.io/sazzo/desafio-konsi-client:latest
    container_name: desafio-konsi-client
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - api
    networks:
      - desafio-konsi-net

  api:
    image: ghcr.io/sazzo/desafio-konsi:latest
    container_name: desafio-konsi-app
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - elasticsearch
      - redis
    networks:
      - desafio-konsi-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: desafio-konsi-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672' # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=default-rabbitmq-user
      - RABBITMQ_DEFAULT_PASS=default-rabbitmq-password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - desafio-konsi-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-wolfi:8.17.3
    container_name: desafio-konsi-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=default-elasticsearch-password
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\\|status.*yellow'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - desafio-konsi-net

  redis:
    image: redis:7-alpine
    container_name: desafio-konsi-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - desafio-konsi-net

networks:
  desafio-konsi-net:
    driver: bridge

volumes:
  rabbitmq_data:
  elasticsearch_data:
  redis_data:
